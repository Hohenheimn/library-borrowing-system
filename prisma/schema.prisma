// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User  {
  id String @id @unique @default(uuid())
  email String @unique
  password String @unique
  role String
  profile Profile?
  borrowedBook BorrowedBook?
}

model Profile {
  id String @id @unique @default(uuid())
  name String
  age Float
  address String
  contact_no String
  user User @relation(fields: [userId], references: [id])
  userId String @unique
 
}

model BookCategory {
   id String @id @unique @default(uuid())
   name String @unique
   books Book[]
}

model Author {
   id String @id @unique @default(uuid())
   name String @unique
   books Book[]
}

model Book {
  id String @id @unique @default(uuid())
  name String
  category BookCategory @relation(fields: [categoryId], references: [id])
  categoryId String
  author Author @relation(fields: [authorId], references: [id])
  authorId String
  borrowedBook BorrowedBook?
}

model BorrowedBook {
  id String @id @unique @default(uuid())
  book Book @relation(fields: [bookId], references: [id])
  bookId String @unique
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  status String 
  returnDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}